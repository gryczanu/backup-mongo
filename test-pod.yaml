apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"test-pod"},"name":"test-pod","namespace":"test"},"spec":{"containers":[{"command":["/bin/sh","-c","tail -f /dev/null"],"envFrom":[{"secretRef":{"name":"test-secret"}}],"image":"alpine:latest","imagePullPolicy":"Always","name":"console","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"imagePullSecrets":[{"name":"regcred"}]}}
  creationTimestamp: "2020-10-20T06:23:38Z"
  labels:
    app: test-pod
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:containers:
          k:{"name":"console"}:
            .: {}
            f:command: {}
            f:envFrom: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:imagePullSecrets:
          .: {}
          k:{"name":"regcred"}:
            .: {}
            f:name: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2020-10-20T06:23:38Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"172.18.0.10"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    time: "2020-10-23T06:45:23Z"
  name: test-pod
  namespace: test
  resourceVersion: "118669"
  selfLink: /api/v1/namespaces/test/pods/test-pod
  uid: e9e7bfdb-8a9f-4fe5-8d4e-93283d348354
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - tail -f /dev/null
    envFrom:
    - secretRef:
        name: test-secret
    image: alpine:latest
    imagePullPolicy: Always
    name: console
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-s6fkw
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: regcred
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-s6fkw
    secret:
      defaultMode: 420
      secretName: default-token-s6fkw
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-10-20T06:23:38Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-10-23T06:45:22Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-10-23T06:45:22Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-10-20T06:23:38Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://24cf0b5e93347c59b065ead6b6b54538c197bb2a55171a6aef14b3d736cc7213
    image: alpine:latest
    imageID: docker-pullable://alpine@sha256:203ee936961c0f491f72ce9d3c3c67d9440cdb1d61b9783cf340baa09308ffc1
    lastState:
      terminated:
        containerID: docker://49e3b50abe7a2d69ce2677995b60026b0799e5add01401f9425ff8af86bd9e00
        exitCode: 255
        finishedAt: "2020-10-23T06:44:12Z"
        reason: Error
        startedAt: "2020-10-22T06:56:55Z"
    name: console
    ready: true
    restartCount: 3
    started: true
    state:
      running:
        startedAt: "2020-10-23T06:45:21Z"
  hostIP: 172.17.0.2
  phase: Running
  podIP: 172.18.0.10
  podIPs:
  - ip: 172.18.0.10
  qosClass: BestEffort
  startTime: "2020-10-20T06:23:38Z"
